set-option -gw xterm-keys on

# bind-key -n C-Tab next-window
# bind-key -n C-S-Tab previous-window
bind-key -n S-Right next-window
bind-key -n S-Left previous-window
# bind-key -n C-p previous-window
# bind-key -n C-n next-window
# bind-key -n C-t new-window
bind-key k kill-window
bind-key C-b choose-window
# bind-key -n C-j copy-mode
# set -g default-terminal "screen-256color"
set -g default-terminal "xterm-256color"
source ~/.tmux.bashrc

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

set -g @continuum-restore 'on'
set -g @continuum-save-interval '5'
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-processes '"/usr/bin/python3 /home/tim/.local/bin/onedrived start --debug" "/bin/bash /home/tim/bin/vpn" "emacs -nw" "node src/app.js" slack-term'

set -g status-right 'CO:#{continuum_status} #(hostname) %d.%m. %H:%M'

bind-key P command-prompt -p 'save history to filename:' -I '~/tmux.history' 'capture-pane -S -32768 ; save-buffer %1 ; delete-buffer'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

# highlight the active pane
set -g pane-active-border-style fg=colour236,bg=colour250

# use the mouse
set -g mouse on

# Copy and paste behaviour similar to Windows cmd - select copies, right click pastes

# Gnome-terminal doesn't support setting the clipboard using xterm escape
# sequences so we should ensure the set-clipboard option is off:
set-option -s set-clipboard off
# We can then bind the copy mode MouseDragEnd1Pane "key", i.e., when the first
# mouse button is released after clicking and dragging in a pane, to a tmux
# command which takes the current copy mode selection (made by the default
# binding for MouseDrag1Pane) and pipes it to a shell command. This tmux command
# was copy-pipe before tmux 2.4, and has since changed to send-keys -X
# copy-pipe[-and-cancel]. As for the shell command, we simply need something
# which will set the contents of the system clipboard to whatever is piped to
# it; xclip is used to do this in the following commands.
bind-key -T copy-mode MouseDragEnd1Pane send-keys -X copy-pipe "xclip -selection clipboard -i"
bind-key -T copy-mode M-w send-keys -X copy-pipe "xclip -i -sel p -f | xclip -i -sel c"
bind-key -n MouseDown3Pane run "xclip -selection clipboard -o | tmux load-buffer - ; tmux paste-buffer"
