#!/bin/bash
function __jruby_head_enable_jruby {
   export JRUBY_HOME="$HOME/Devel/projects/jruby"
   export PATH="$JRUBY_HOME/bin:$PATH"
   alias jruby_debug="jruby -J-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=4000 -J-Xdebug"
   alias jruby_gdb="gdb --args java -client -Djruby.memory.max=500m -Djruby.stack.max=2048k -Xmx500m -Xss2048k -Djffi.boot.library.path=/home/tim/Devel/projects/jruby/lib/native/i386-Linux:/home/tim/Devel/projects/jruby/lib/native/ppc-Linux:/home/tim/Devel/projects/jruby/lib/native/s390x-Linux:/home/tim/Devel/projects/jruby/lib/native/x86_64-Linux -Xbootclasspath/a:/home/tim/Devel/projects/jruby/lib/jruby.jar -classpath : -Djruby.home=/home/tim/Devel/projects/jruby -Djruby.lib=/home/tim/Devel/projects/jruby/lib -Djruby.script=jruby -Djruby.shell=/bin/sh org.jruby.Main -v"
}

function __jruby_head_disable_jruby {
   if [ "$JRUBY_HOME" != "" ]; then
      first="${PATH%%:*}"
      rest="$PATH"
      while [ first != "" ]; do
         rest="${rest#*:}"
         if [ "$first" != "$JRUBY_HOME/bin" ]; then
            new_path="$new_path:$first"
         else
            new_path="$new_path:$rest"
            break
         fi
         first="${rest%%:*}"
         if [ "$rest" == "${rest/:/}" ]; then
            break
         fi
      done
      export PATH="${new_path:1}"
      unset JRUBY_HOME
      unalias jruby_debug
      unset first
      unset rest
      unset new_path
   else
      echo "JRUBY_HOME not defined, skipping."
   fi
}

if [ $# -ne 1 ]; then
   echo "Supply enable or disable as argument"
else
   if [ $1 == "enable" ]; then
      if [ "$JRUBY_HOME" != "" ]; then
         __jruby_head_disable_jruby
      fi
      __jruby_head_enable_jruby
   else if [ $1 == "disable" ]; then
      __jruby_head_disable_jruby
   else
      echo "Supply enable or disable as argument"
   fi fi
fi


